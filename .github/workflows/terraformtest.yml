name: Terraform Azure Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (test/prod)"
        required: true
        default: "test"

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
      ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
      ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      TF_VAR_environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=tfstate-rg" \
            -backend-config="storage_account_name=htwtfstorage001" \
            -backend-config="container_name=htwcont" \
            -backend-config="key=${{ github.event.inputs.environment }}.tfstate"

      - name: Check for variables file
        run: |
          if [ ! -f "environments/${{ github.event.inputs.environment }}/terraform.tfvars" ]; then
            echo "Error: Variables file not found!"
            exit 1
          fi

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="environments/${{ github.event.inputs.environment }}/terraform.tfvars" -out=tfplan

      - name: Terraform Apply (test)
        if: github.event.inputs.environment == 'test'
        run: terraform apply -auto-approve tfplan

      - name: Terraform Apply (prod with manual approval)
        if: github.event.inputs.environment == 'prod'
        uses: hmarr/auto-approve-action@v2
        with:
          command: terraform apply tfplan
